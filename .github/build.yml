name: Build executables

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: |
          pyinstaller ^
            --onefile ^
            --name BlazeRoadEditor ^
            --icon=asset/icon.ico ^
            --add-data "asset;asset" ^
            --paths src ^
            --paths core ^
            --paths ui ^
            --hidden-import distutils ^
            --noconsole ^
            src/app.py

      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          pyinstaller \
            --onefile \
            --name BlazeRoadEditor \
            --icon=asset/icon.ico \
            --add-data "asset:asset" \
            --paths src \
            --paths core \
            --paths ui \
            --hidden-import distutils \
            --noconsole \
            src/app.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-BlazeRoadEditor
          path: dist/**
